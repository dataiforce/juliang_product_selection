"""增加了两张表，更新了一些字段

Revision ID: 684f489c2d09
Revises: 0a120ecdb51e
Create Date: 2025-09-03 16:24:14.947845

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '684f489c2d09'
down_revision: Union[str, Sequence[str], None] = '0a120ecdb51e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ad_plan',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='自增主键'),
    sa.Column('ad_id', sa.String(), nullable=True, comment='全域商品推广计划ID'),
    sa.Column('advertiser_id', sa.String(), nullable=True, comment='广告主ID'),
    sa.Column('name', sa.String(), nullable=True, comment='推广计划名称'),
    sa.Column('aweme_id', sa.String(), nullable=True, comment='抖音ID'),
    sa.Column('marketing_goal', sa.String(), nullable=True, comment='营销目标'),
    sa.Column('raw_data', sa.Text(), nullable=True, comment='序列化后原始数据json'),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True, comment='创建时间'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ad_plan_ad_id'), 'ad_plan', ['ad_id'], unique=False)
    op.create_table('regulation_record',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='主键自增ID'),
    sa.Column('advertiser_id', sa.String(), nullable=False, comment='千川ID(必填)'),
    sa.Column('ad_id', sa.String(), nullable=False, comment='广告主ID(必填)'),
    sa.Column('name', sa.String(), nullable=True, comment='更新的计划名称，默认 null'),
    sa.Column('budget', sa.Float(), nullable=True, comment='更新后的预算，单位元，最多支持两位小数'),
    sa.Column('roi2_goal', sa.Float(), nullable=True, comment='ROI2 目标，最多支持两位小数'),
    sa.Column('regulation_json', sa.Text(), nullable=False, comment='调控的json字符串(必填)'),
    sa.Column('response_json', sa.Text(), nullable=False, comment='请求响应的json字符串 (必填)'),
    sa.Column('opt_status', sa.String(), nullable=True, comment="更新推广计划状态，['DISABLE, ENABLE, DELETE']"),
    sa.Column('modifier', sa.String(), nullable=False, comment='修改人(必填)'),
    sa.Column('regulation_at', sa.DateTime(timezone=True), nullable=False, comment='调控记录时间'),
    sa.PrimaryKeyConstraint('id')
    )
    op.alter_column('material', 'use_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_comment='使用时间',
               existing_nullable=True)
    op.alter_column('material', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_comment='创建时间',
               existing_nullable=True)
    op.alter_column('promotion_product', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_comment='记录创建时间',
               existing_nullable=True)
    op.alter_column('sale_content', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_comment='记录创建时间',
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('sale_content', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_comment='记录创建时间',
               existing_nullable=True)
    op.alter_column('promotion_product', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_comment='记录创建时间',
               existing_nullable=True)
    op.alter_column('material', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_comment='创建时间',
               existing_nullable=True)
    op.alter_column('material', 'use_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_comment='使用时间',
               existing_nullable=True)
    op.drop_table('regulation_record')
    op.drop_index(op.f('ix_ad_plan_ad_id'), table_name='ad_plan')
    op.drop_table('ad_plan')
    # ### end Alembic commands ###
